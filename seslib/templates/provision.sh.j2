set -ex

DEPLOYMENT_SCRIPT="$0"

function err_report {
    local line_number="$1"
    echo "Error in sesdev deployment script trapped!"
    echo "=> hostname: $(hostname)"
    echo "=> script: $DEPLOYMENT_SCRIPT"
    echo "=> line number: $line_number"
    echo "Bailing out!"
    exit 0
}

# ensure Vagrant doesn't destroy the master node when the script fails
trap 'err_report $LINENO' ERR

ls -lR /home/vagrant

# populate /etc/hosts
{% for _node in nodes %}
{% if _node.public_address %}
echo "{{ _node.public_address }} {{ _node.fqdn }} {{ _node.name }}" >> /etc/hosts
{% endif %}
{% endfor %}

# if --ssd option was given, set rotational flag on first additional disk
{% if ssd %}
if [ -f /sys/block/vdb/queue/rotational ] ; then
    echo "0" > /sys/block/vdb/queue/rotational
fi
{% endif %} {# ssd #}

# distribute SSH keys
cat /home/vagrant/.ssh/{{ ssh_key_name }}.pub >> /home/vagrant/.ssh/authorized_keys
[ ! -e "/root/.ssh" ] && mkdir /root/.ssh
chmod 600 /home/vagrant/.ssh/{{ ssh_key_name }}
cp /home/vagrant/.ssh/{{ ssh_key_name }}* /root/.ssh/
ln -s /root/.ssh/{{ ssh_key_name }} /root/.ssh/id_rsa
ln -s /root/.ssh/{{ ssh_key_name }}.pub /root/.ssh/id_rsa.pub
cat /root/.ssh/{{ ssh_key_name }}.pub >> /root/.ssh/authorized_keys

# set hostname
hostnamectl set-hostname {{ node.name }}

# persist the journal
sed -i -e 's/#Storage=auto/Storage=persistent/' /etc/systemd/journald.conf
systemctl restart systemd-journald

# zypper-related setup (tweak settings, repos, system packages)
{% include "zypper.j2" %}

# sync clocks if needed
{% include "sync_clocks.j2" %}

# deploy
{% if deploy_salt or suma %}
{% include "salt/provision.sh.j2" %}
{% elif version == 'caasp4' %}
{% include "caasp/provision.sh.j2" %}
{% elif version == 'makecheck' %}
{% include "makecheck/provision.sh.j2" %}
{% endif %}

